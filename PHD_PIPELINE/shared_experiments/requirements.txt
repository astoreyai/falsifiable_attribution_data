# Requirements for Shared Experiments (Articles A & B)
# Python 3.9+ required
#
# Install with: pip install -r requirements.txt
#
# For GPU support, ensure CUDA 11.8+ and PyTorch with CUDA support:
#   pip install torch torchvision --index-url https://download.pytorch.org/whl/cu118

# ============================================================================
# CORE DEEP LEARNING
# ============================================================================

torch>=2.0.0
torchvision>=0.15.0
# PyTorch: Deep learning framework
# torchvision: Image transformations and pretrained models

# ============================================================================
# EXPLAINABILITY / ATTRIBUTION
# ============================================================================

captum>=0.6.0
# Captum: Model interpretability library for PyTorch
# Provides: Grad-CAM, Integrated Gradients, SHAP, and more
# https://captum.ai/

# ============================================================================
# PERCEPTUAL METRICS
# ============================================================================

lpips>=0.1.4
# LPIPS: Learned Perceptual Image Patch Similarity
# Used for plausibility gate (measures perceptual similarity)
# https://github.com/richzhang/PerceptualSimilarity

# ============================================================================
# NUMERICAL / SCIENTIFIC COMPUTING
# ============================================================================

numpy>=1.24.0
# NumPy: Array operations, linear algebra

scipy>=1.10.0
# SciPy: Statistical tests, optimization
# Used for: pearsonr, ttest_rel, bootstrap

scikit-learn>=1.3.0
# scikit-learn: Machine learning utilities
# Used for: FID computation (if using sklearn-based implementation)

# ============================================================================
# IMAGE PROCESSING
# ============================================================================

Pillow>=9.5.0
# PIL/Pillow: Image loading, resizing, format conversion

opencv-python>=4.8.0
# OpenCV: Advanced image processing
# Used for: Face detection, preprocessing (optional)

scikit-image>=0.21.0
# scikit-image: Image processing algorithms
# Used for: Quickshift segmentation (SHAP superpixels)

# ============================================================================
# VISUALIZATION
# ============================================================================

matplotlib>=3.7.0
# matplotlib: Plotting library
# Used for: All figures, scatter plots, calibration plots

seaborn>=0.12.0
# seaborn: Statistical visualization
# Provides: Publication-ready defaults, colorblind palettes

# ============================================================================
# DATA HANDLING
# ============================================================================

pandas>=2.0.0
# pandas: Dataframes for results storage

tqdm>=4.65.0
# tqdm: Progress bars for long-running loops

# ============================================================================
# UTILITIES
# ============================================================================

pyyaml>=6.0
# PyYAML: Configuration file parsing

python-dotenv>=1.0.0
# python-dotenv: Environment variable management

# ============================================================================
# OPTIONAL: ADVANCED METRICS
# ============================================================================

# For FID computation (Fréchet Inception Distance)
# Option 1: Use pytorch-fid package
# pytorch-fid>=0.3.0

# Option 2: Use scipy-based implementation (included in code)
# No additional dependency needed

# ============================================================================
# OPTIONAL: FACE RECOGNITION MODELS
# ============================================================================

# For loading pretrained ArcFace/CosFace models
# Option 1: Use InsightFace package
# insightface>=0.7.3
# Note: Requires additional dependencies (mxnet or onnxruntime)

# Option 2: Use Hugging Face Transformers
# transformers>=4.30.0

# Option 3: Manual implementation (recommended for full control)
# No additional dependency needed (use PyTorch directly)

# ============================================================================
# OPTIONAL: JUPYTER NOTEBOOKS
# ============================================================================

# For interactive exploration and debugging
# jupyter>=1.0.0
# ipython>=8.14.0
# ipywidgets>=8.0.0

# ============================================================================
# DEVELOPMENT / TESTING
# ============================================================================

# For code quality and testing (optional, not needed for experiments)
# pytest>=7.4.0
# black>=23.7.0
# flake8>=6.0.0
# mypy>=1.4.0

# ============================================================================
# NOTES
# ============================================================================

# GPU Support:
#   - CUDA 11.8+ required for PyTorch GPU acceleration
#   - Install PyTorch with CUDA:
#     pip install torch torchvision --index-url https://download.pytorch.org/whl/cu118
#
# Memory Requirements:
#   - Minimum: 8 GB RAM, 8 GB VRAM (GPU)
#   - Recommended: 32 GB RAM, 24 GB VRAM (e.g., RTX 3090)
#
# Dataset:
#   - LFW: Download from http://vis-www.cs.umass.edu/lfw/
#   - Extract to ./data/lfw/
#
# Pretrained Models:
#   - ArcFace: Download from https://github.com/deepinsight/insightface
#   - Model: ms1mv3_arcface_r50_fp16
#   - Place in ./models/
#
# Troubleshooting:
#   - If LPIPS installation fails: pip install lpips --no-deps, then install dependencies manually
#   - If Captum incompatible with PyTorch version: pip install captum --upgrade
#   - If CUDA out of memory: Reduce batch_size in config
#
# Reproducibility:
#   - Set PYTHONHASHSEED=42 for full reproducibility
#   - Use fixed random seeds in code (torch.manual_seed(42), np.random.seed(42))
#   - For deterministic cuDNN: torch.backends.cudnn.deterministic = True
#
# Performance:
#   - Use torch.compile() (PyTorch 2.0+) for 30% speedup
#   - Use mixed precision (torch.cuda.amp) for 2× speedup on Tensor Core GPUs
#   - Batch processing recommended (batch_size=16 for 24 GB VRAM)
